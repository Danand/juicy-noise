name: Release Juicy Noise VST

on:
  push:
    tags:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        os: [
          ubuntu-latest,
          windows-latest
        ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt update
          sudo apt install \
            libasound2-dev \
            libjack-jackd2-dev \
            ladspa-sdk \
            libcurl4-openssl-dev  \
            libfreetype6-dev \
            libx11-dev \
            libxcomposite-dev \
            libxcursor-dev \
            libxcursor-dev \
            libxext-dev \
            libxinerama-dev \
            libxrandr-dev \
            libxrender-dev \
            libwebkit2gtk-4.0-dev \
            libglu1-mesa-dev \
            mesa-common-dev
          project_path="${PWD}/juicy-noise-fx/juicy-noise-fx.jucer"
          pushd "JUCE/extras/Projucer/Builds/LinuxMakefile"
          make
          pushd "build"
          chmod +x ./Projucer
          ./Projucer \
            --resave "${project_path}" \
            --lf
          popd
          popd
          make_dir="juicy-noise-fx/Builds/LinuxMakefile"
          mkdir -p "${make_dir}"
          pushd "${make_dir}"
          make VST3

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Set-ExecutionPolicy `
            Bypass `
            -Scope Process `
            -Force; `
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          $env:Path += ";%USERPROFILE%\chocolatey\bin"
          choco install --yes zip
          choco install --yes visualstudio2019-workload-vctools
          choco install --yes microsoft-build-tools
          $project_path = "$((Get-Location).Path)\juicy-noise-fx\juicy-noise-fx.jucer"
          pushd "JUCE\extras\Projucer\Builds\VisualStudio2019"
          $msbuild = "${Env:ProgramFiles(x86)}\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe"
          & $msbuild Projucer.sln
          $projucer = "$((Get-Location).Path)\x64\Debug\App\Projucer.exe"
          $job = Start-Job -ScriptBlock { `
            param($executable, $project) `
            & $executable "--resave", "${project}" `
          } `
            -ArgumentList `
              "${projucer}", `
              "${project_path}"
          Start-Sleep -Seconds 20
          Receive-Job -Job $job
          Remove-Job -Job $job
          popd
          pushd "juicy-noise-fx\Builds\VisualStudio2019"
          & $msbuild juicy-noise-fx.sln

      - name: Pack artifacts for Linux
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          vst_name="juicy-noise-fx.vst3"
          find . -type d -name "${vst_name}" \
          | while read -r vst_dir; do
              for platform_dir in "${vst_dir}/Contents/"*; do
                platform="$(basename "${platform_dir}")"
                archive_name="juicy-noise-fx-${{github.ref_name}}-${platform}"
                mkdir "${archive_name}"
                cp -r "${vst_dir}" "${archive_name}/${vst_name}"
                pushd "${archive_name}"
                zip -r "${archive_name}.zip" "${vst_name}/"
                popd
                cp "${archive_name}/${archive_name}.zip" "${archive_name}.zip"
                rm -rf "${archive_name}"
              done
            done

      - name: Pack artifacts for Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          vst_name="juicy-noise-fx.vst3"
          find . -type f -name "${vst_name}" \
          | while read -r vst_file; do
              cp "${vst_file}" "${vst_name}"
              arch="$(basename "$(realpath "$(dirname "${vst_file}")/../..")")"
              archive_name="juicy-noise-fx-${{github.ref_name}}-${arch}-windows"
              zip "${archive_name}.zip" "${vst_name}"
            done

      - name: Upload artifacts for Linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: vst-linux
          path: juicy-noise-fx-*.zip
          if-no-files-found: error
          retention-days: 1

      - name: Upload artifacts for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: vst-windows
          path: juicy-noise-fx-*.zip
          if-no-files-found: error
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: List artifacts
        run: |
          echo "Artifacts:"
          ls -R

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: '${{ secrets._GITHUB_PAT }}'
          files: './**/juicy-noise-fx-*.zip'
